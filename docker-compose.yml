version: '3.9'

services:

  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: opentelemetry-collector
    command: --config=/etc/otel-collector-config.yaml
    ports:
    - "4317:4317"
    - "4318:4318"
    volumes:
    - "./config/collector.yaml:/etc/otel-collector-config.yaml"
    env_file:
      - .env
    environment:
      DD_API_KEY: ${DD_API_KEY}

  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    volumes:
      - ./config/datadog/:/etc/datadog-agent/conf.d/kong.d/
    environment:
      DD_SITE: "datadoghq.com"
      DD_ENV: "aigatewaydemo"
      DD_HOSTNAME: "ai-gateway-demo"
      DD_API_KEY: ${DD_API_KEY:-ERROR_NOT_SET}
      DD_APP_KEY: ${DD_APP_KEY:-ERROR_NOT_SET}
      DD_LOGS_ENABLED: true
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: false
  postgres:
    image: postgres:13.9
    container_name: postgres
    command: -c max_connections=5000
    env_file:
      - .env
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: kong

  kong:
    # Only Enterprise version is supported to propagate the DataDog tracing headers
    image: kong/kong-gateway:3.8.0.0
    container_name: kong-gateway
    command: sh -c "kong migrations bootstrap && kong start"
    ports:
    - "9000:9000"
    - "9001:9001"
    - "9002:9002"
    - "9100:9100"
    env_file:
      - .env
    environment:
      KONG_DATABASE: postgres
      KONG_LOG_LEVEL: debug
      KONG_PG_HOST: postgres
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}
      KONG_PG_USER: kong
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:9000 reuseport backlog=16384
      KONG_ADMIN_GUI_URL: http://localhost:9002
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:9002
      KONG_ADMIN_LISTEN: 0.0.0.0:9001
      KONG_STATUS_LISTEN: 0.0.0.0:9100
      KONG_TRACING_INSTRUMENTATIONS: all
      KONG_TRACING_SAMPLING_RATE: 1.0
      KONG_ROUTER_FLAVOR: traditional #expressions
      KONG_ANONYMOUS_REPORTS: off
    restart: always
    depends_on:
    - postgres